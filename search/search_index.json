{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documentacion Docker, Ansible, Jenkins, Kubernetes, nwdiag, CMDB 13/09/2021 - 10/06/2022","title":"Inicio"},{"location":"#documentacion","text":"","title":"Documentacion"},{"location":"#docker-ansible-jenkins-kubernetes-nwdiag-cmdb","text":"13/09/2021 - 10/06/2022","title":"Docker, Ansible, Jenkins, Kubernetes, nwdiag, CMDB"},{"location":"ansible/ansible_git/","text":"GIT + ANSIBLE Generar clave SSH en ansible ssh-keygen Copiar clave publica en el repositorio de github Establecer conexion SSH desde el servidor a GitHub Clonar repositorio desde .yml Comprobacion en el host Para que funcione, el repositorio tiene que ser publico","title":"GIT"},{"location":"ansible/ansible_git/#git-ansible","text":"Generar clave SSH en ansible ssh-keygen Copiar clave publica en el repositorio de github Establecer conexion SSH desde el servidor a GitHub Clonar repositorio desde .yml Comprobacion en el host Para que funcione, el repositorio tiene que ser publico","title":"GIT + ANSIBLE"},{"location":"ansible/info_ansible/","text":"Ansible Para instalar Ansible manualmente, usar yum install ansible Archivos a editar: ansible.cfg Que es? Archivo de configuracion de distintos parametros de Ansible Descomentar los siguientes valores [defaults] inventory library sudo_user remote_port Descomentar la linea \"roles_path = /etc/ansible/roles\" Descomentar la linea \"remote_user = root\" Descomentar la linea \"log_path = /var/log/ansible.log\" Descomentar la linea \"display_skipped_hosts = True\" Solo si queremos que aparezca el mensaje 'Skipping [host]' hosts Que es? Archivo donde se almacenan las conexiones para los PLAYBOOKS Para a\u00f1adir un HOST: Direccion IP de la maquina","title":"Info"},{"location":"ansible/info_ansible/#ansible","text":"Para instalar Ansible manualmente, usar yum install ansible Archivos a editar: ansible.cfg Que es? Archivo de configuracion de distintos parametros de Ansible Descomentar los siguientes valores [defaults] inventory library sudo_user remote_port Descomentar la linea \"roles_path = /etc/ansible/roles\" Descomentar la linea \"remote_user = root\" Descomentar la linea \"log_path = /var/log/ansible.log\" Descomentar la linea \"display_skipped_hosts = True\" Solo si queremos que aparezca el mensaje 'Skipping [host]' hosts Que es? Archivo donde se almacenan las conexiones para los PLAYBOOKS Para a\u00f1adir un HOST: Direccion IP de la maquina","title":"Ansible"},{"location":"ansible/playbooks_ansible/","text":"PLAYBOOKs Ejecutar un playbook: ansible-playbook NombrePlaybook.yml En caso de dar fallo: Comprobar que SSH esta instalado y funcionando. Para instalarlo e iniciarlo: yum install openssh-server openssh-client service ssh start Comprobar que tenemos privilegios. En caso de no tenerlos, ejecutar en la terminal del equipo real: docker run -d --name nommbreContenedor -it --privileged {ID de la imagen} /usr/sbin/init","title":"Playbooks"},{"location":"ansible/playbooks_ansible/#playbooks","text":"Ejecutar un playbook: ansible-playbook NombrePlaybook.yml En caso de dar fallo: Comprobar que SSH esta instalado y funcionando. Para instalarlo e iniciarlo: yum install openssh-server openssh-client service ssh start Comprobar que tenemos privilegios. En caso de no tenerlos, ejecutar en la terminal del equipo real: docker run -d --name nommbreContenedor -it --privileged {ID de la imagen} /usr/sbin/init","title":"PLAYBOOKs"},{"location":"awx/info_ansibletower/","text":"Ansible Tower proporciona una interfaz grafica unica en la que centralizar y orquestar toda la infraestructura TI de manera visual. Ofrece una API REST y soporte para la linea de comandos con la que interactuar, a traves de la cual es posible inyectar comandos directamente en Ansible Tower para automatizar niveles mas profundos de configuracion del estado deseado y reducir los errores potenciales que se presentan con la administracion manual de la infraestructura. Extiende su funcionalidad con caracteristicas esenciales en implementaciones de TI empresariales a gran escala entre las que se incluyen: Control de acceso basado en roles con el que garantizar que los usuarios individuales y los grupos de usuarios tengan un acceso adecuado y seguro al entorno. Plataforma centralizada sobre la que ejecutar playbooks, realizar registros y administrar el inventario de clientes en un entorno especifico. Vista unica del estado y el estado de la implementacion con informacion en tiempo real de la ejecucion de tareas. Programacion de tareas para su ejecucion automatica y notificaciones integradas.","title":"Ansible Tower"},{"location":"awx/info_awx/","text":"AWX es un proyecto comunitario de codigo abierto con el que se proporciona software para administrar proy ectos de Ansible. AWX se aloja en GitHub y en el se proporciona una interfaz de usuario basada en la Web, API REST y un motor de tareas para Ansible. En el panel visual de AWX se permite programar e implementar cuadernos de trabajos de Ansible y se proporciona registro, auditoria y seguimiento del sistema centralizados. Mediante AWX se proporciona el codigo fuente para Ansible Tower , la version comercial de AWX. AWX es la version gratuita de Ansible Tower. Implementacion en Ubuntu 20.04 Actualizar el sistema e instalar Ansible sudo apt update sudo apt upgrade sudo apt install ansible Instalar Docker y Docker Compose Docker: sudo apt install apt-transport-https ca-certificates curl software-properties-common gnupg-agent curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo apt update sudo apt install docker-ce sudo /etc/init.d/docker start Docker Compose: sudo apt install docker-compose Instalar Node y NPM Node: sudo apt install nodejs npm NPM: sudo npm install npm --global Instalar AWX Instalar el modulo docker-py python sudo apt install python3-pip git pwgen vim Descargar el fichero AWX desde GitHub y descomprimirlo wget https://github.com/ansible/awx/archive/17.1.0.zip unzip 17.1.0.zip Ir a la carpeta awx/installer y generar una key secreta cd awx-17.1.0/installer/ pwgen -N 1 -s 30 Editar el fichero inventory con lo siguiente: sudo nano inventory dockerhub_base=ansible awx_task_hostname=awx awx_web_hostname=awxweb postgres_data_dir=/tmp/pgdocker host_port=80 host_port_ssl=443 docker_compose_dir=/tmp/awxcompose pg_username=awx pg_password=awxpass pg_database=awx pg_port=5432 admin_user=admin admin_password=password create_preload_data=True secret_key= clave_secreta Ejecutar el playbook install.yml ansible-playbook -i inventory install.yml Comprobar los contenedores docker ps Acceder a la web: http://IP_MAQUINA","title":"AWX"},{"location":"awx/info_awx/#implementacion-en-ubuntu-2004","text":"Actualizar el sistema e instalar Ansible sudo apt update sudo apt upgrade sudo apt install ansible Instalar Docker y Docker Compose Docker: sudo apt install apt-transport-https ca-certificates curl software-properties-common gnupg-agent curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo apt update sudo apt install docker-ce sudo /etc/init.d/docker start Docker Compose: sudo apt install docker-compose Instalar Node y NPM Node: sudo apt install nodejs npm NPM: sudo npm install npm --global Instalar AWX Instalar el modulo docker-py python sudo apt install python3-pip git pwgen vim Descargar el fichero AWX desde GitHub y descomprimirlo wget https://github.com/ansible/awx/archive/17.1.0.zip unzip 17.1.0.zip Ir a la carpeta awx/installer y generar una key secreta cd awx-17.1.0/installer/ pwgen -N 1 -s 30 Editar el fichero inventory con lo siguiente: sudo nano inventory dockerhub_base=ansible awx_task_hostname=awx awx_web_hostname=awxweb postgres_data_dir=/tmp/pgdocker host_port=80 host_port_ssl=443 docker_compose_dir=/tmp/awxcompose pg_username=awx pg_password=awxpass pg_database=awx pg_port=5432 admin_user=admin admin_password=password create_preload_data=True secret_key= clave_secreta Ejecutar el playbook install.yml ansible-playbook -i inventory install.yml Comprobar los contenedores docker ps Acceder a la web: http://IP_MAQUINA","title":"Implementacion en Ubuntu 20.04"},{"location":"docker/comandos_docker/","text":"Comandos DOCKER Descargar una imagen docker pull Nombre_imagen Ver las imagenes descargadas docker images Ejecutar una imagen para crear un contenedor docker run [opciones] nombre_imagen [comando] . . . docker run jenkins/jenkins:lts Crear una imagen a partir de un dockerfile docker build [opciones] ruta nombre Ver lista de contenedores iniciados docker container ls Hacer una exportacion de imagen docker export ID_CONTENEDOR nombre_archivo.tar docker export 55e4472ac30d prueba.tar Hacer una importacion de imagen desde el archivo .tar docker import nombre_archivo.tar nombre_imagen_importada docker import prueba.tar imagen_prueba Crear un contenedor a partir de la imagen importada docker run --name nombre_contenedor -ti [-p puerto] nombre_imagen_importada comando docker run --name prueba1 -ti imagen_prueba sh","title":"Comandos"},{"location":"docker/comandos_docker/#comandos-docker","text":"Descargar una imagen docker pull Nombre_imagen Ver las imagenes descargadas docker images Ejecutar una imagen para crear un contenedor docker run [opciones] nombre_imagen [comando] . . . docker run jenkins/jenkins:lts Crear una imagen a partir de un dockerfile docker build [opciones] ruta nombre Ver lista de contenedores iniciados docker container ls Hacer una exportacion de imagen docker export ID_CONTENEDOR nombre_archivo.tar docker export 55e4472ac30d prueba.tar Hacer una importacion de imagen desde el archivo .tar docker import nombre_archivo.tar nombre_imagen_importada docker import prueba.tar imagen_prueba Crear un contenedor a partir de la imagen importada docker run --name nombre_contenedor -ti [-p puerto] nombre_imagen_importada comando docker run --name prueba1 -ti imagen_prueba sh","title":"Comandos DOCKER"},{"location":"docker/dockerfile/","text":"Dockerfile Para que sirve? Archivo sin extension que crea imagenes de docker acorde a los comandos/instrucciones previamente establecidos Como se crea? FROM Nombre_imagen ENV [variables de entorno] USER [Nombre de usuario desde el que se quieran ejecutar las instrucciones] RUN [comandos a ejecutar] Ejemplos Dockerfile Ubuntu FROM ubuntu:latest RUN apt-get update apt-get upgrade RUN useradd -m nombre_usuario -p contrasena RUN mkdir /home/directorio_usuario/carpeta Dockerfile Jenkins FROM jenkins/jenkins:lts ENV contrasena=abcd USER root RUN echo \"hola\" RUN apt-get update","title":"Dockerfile"},{"location":"docker/dockerfile/#dockerfile","text":"","title":"Dockerfile"},{"location":"docker/dockerfile/#para-que-sirve","text":"Archivo sin extension que crea imagenes de docker acorde a los comandos/instrucciones previamente establecidos","title":"Para que sirve?"},{"location":"docker/dockerfile/#como-se-crea","text":"FROM Nombre_imagen ENV [variables de entorno] USER [Nombre de usuario desde el que se quieran ejecutar las instrucciones] RUN [comandos a ejecutar]","title":"Como se crea?"},{"location":"docker/dockerfile/#ejemplos","text":"","title":"Ejemplos"},{"location":"docker/dockerfile/#dockerfile-ubuntu","text":"FROM ubuntu:latest RUN apt-get update apt-get upgrade RUN useradd -m nombre_usuario -p contrasena RUN mkdir /home/directorio_usuario/carpeta","title":"Dockerfile Ubuntu"},{"location":"docker/dockerfile/#dockerfile-jenkins","text":"FROM jenkins/jenkins:lts ENV contrasena=abcd USER root RUN echo \"hola\" RUN apt-get update","title":"Dockerfile Jenkins"},{"location":"docker/info_docker/","text":"Docker y maquinas virtuales Imagenes, volumenes y contenedores 1. Imagenes Plantilla base desde la que se parte para crear contenedores. 2. Volumenes Discos duros virtuales en los que se guardan los datos de un contenedor. 3. Contenedores Escalado de contenedores Por defecto, todos son contenedores Linux. Para cambiar a contenedores de Windows y poder agregar imagenes de este SO, hacer clic derecho en el icono de docker en los iconos ocultos de la barra de Windows y seleccionar \"Switch to Windows containers...\" Kubernetes https://kubernetes.io/es/docs/concepts/overview/what-is-kubernetes/","title":"Info"},{"location":"docker/info_docker/#docker-y-maquinas-virtuales","text":"","title":"Docker y maquinas virtuales"},{"location":"docker/info_docker/#imagenes-volumenes-y-contenedores","text":"","title":"Imagenes, volumenes y contenedores"},{"location":"docker/info_docker/#1-imagenes","text":"Plantilla base desde la que se parte para crear contenedores.","title":"1. Imagenes"},{"location":"docker/info_docker/#2-volumenes","text":"Discos duros virtuales en los que se guardan los datos de un contenedor.","title":"2. Volumenes"},{"location":"docker/info_docker/#3-contenedores","text":"Escalado de contenedores Por defecto, todos son contenedores Linux. Para cambiar a contenedores de Windows y poder agregar imagenes de este SO, hacer clic derecho en el icono de docker en los iconos ocultos de la barra de Windows y seleccionar \"Switch to Windows containers...\"","title":"3. Contenedores"},{"location":"docker/info_docker/#kubernetes","text":"https://kubernetes.io/es/docs/concepts/overview/what-is-kubernetes/","title":"Kubernetes"},{"location":"escaneo_redes/bwmng/","text":"BWM-NG Esta herramienta es muy simple, podremos obtener informacion de todas las interfaces de red de forma interactiva, e incluso podremos exportarlo a un determinado formato para posteriormente consultarlo mas facilmente en otro dispositivo. Instalacion apt install bwm-ng Pruebas","title":"BWM-NG"},{"location":"escaneo_redes/bwmng/#bwm-ng","text":"Esta herramienta es muy simple, podremos obtener informacion de todas las interfaces de red de forma interactiva, e incluso podremos exportarlo a un determinado formato para posteriormente consultarlo mas facilmente en otro dispositivo.","title":"BWM-NG"},{"location":"escaneo_redes/bwmng/#instalacion","text":"apt install bwm-ng","title":"Instalacion"},{"location":"escaneo_redes/bwmng/#pruebas","text":"","title":"Pruebas"},{"location":"escaneo_redes/dstat/","text":"DSTAT Un monitor algo menos conocido que los anteriores, pero que tambien es muy util. Esta herramienta sirve para generar estadisticas de uso del sistema operativo, tanto a nivel de CPU, disco, memoria RAM, como tambien de la red local. De hecho, podremos habilitar o no el estado de la red e incluso elegir las interfaces. Instalacion apt install dstat Pruebas","title":"DSTAT"},{"location":"escaneo_redes/dstat/#dstat","text":"Un monitor algo menos conocido que los anteriores, pero que tambien es muy util. Esta herramienta sirve para generar estadisticas de uso del sistema operativo, tanto a nivel de CPU, disco, memoria RAM, como tambien de la red local. De hecho, podremos habilitar o no el estado de la red e incluso elegir las interfaces.","title":"DSTAT"},{"location":"escaneo_redes/dstat/#instalacion","text":"apt install dstat","title":"Instalacion"},{"location":"escaneo_redes/dstat/#pruebas","text":"","title":"Pruebas"},{"location":"escaneo_redes/iftop/","text":"IFTOP Iftop es una aplicacion similar a top , pero esta centrada especificamente para la monitorizacion de la red. Iftop nos permitira conocer una gran cantidad de detalles respecto a la red, como el ancho de banda consumido, las conexiones TCP/UDP que hemos establecido, direcciones IP y puerto y mucha mas informacion. Instalacion apt install iftop Pruebas","title":"IFTOP"},{"location":"escaneo_redes/iftop/#iftop","text":"Iftop es una aplicacion similar a top , pero esta centrada especificamente para la monitorizacion de la red. Iftop nos permitira conocer una gran cantidad de detalles respecto a la red, como el ancho de banda consumido, las conexiones TCP/UDP que hemos establecido, direcciones IP y puerto y mucha mas informacion.","title":"IFTOP"},{"location":"escaneo_redes/iftop/#instalacion","text":"apt install iftop","title":"Instalacion"},{"location":"escaneo_redes/iftop/#pruebas","text":"","title":"Pruebas"},{"location":"escaneo_redes/iptraf/","text":"IPTRAF Esta aplicacion nos va a proporcionar una gran cantidad de informacion a nivel de red, nos va a permitir ver la misma informacion de las dos anteriores herramientas e incluso mas. Iptraf no se encuentra instalada de forma predeterminada en sistemas operativos Linux, por tanto, deberemos instalarla a traves de los repositorios oficiales. Instalacion apt install iptraf Pruebas Pantalla inicial Monitoreo de trafico IP Monitor de estacion LAN","title":"IPTRAF"},{"location":"escaneo_redes/iptraf/#iptraf","text":"Esta aplicacion nos va a proporcionar una gran cantidad de informacion a nivel de red, nos va a permitir ver la misma informacion de las dos anteriores herramientas e incluso mas. Iptraf no se encuentra instalada de forma predeterminada en sistemas operativos Linux, por tanto, deberemos instalarla a traves de los repositorios oficiales.","title":"IPTRAF"},{"location":"escaneo_redes/iptraf/#instalacion","text":"apt install iptraf","title":"Instalacion"},{"location":"escaneo_redes/iptraf/#pruebas","text":"Pantalla inicial Monitoreo de trafico IP Monitor de estacion LAN","title":"Pruebas"},{"location":"escaneo_redes/masscan/","text":"MASSCAN Masscan produce resultados similares a Nmap , el escaner de puertos mas famoso. Internamente opera de manera mas similar a scanrad , unicornscan y zmap . La principal diferencia es el hecho de ser mas veloz comparado con estos otros escaners. Ademas de ser mas flexible, permitiendo rangos de direcciones y rangos de puertos arbitrarios. No existen puertos por defecto a escanear, siempre se debe especificarlos. Y los hosts objetivos deben ser siempre direcciones IP o rangos simples, no nombres de dominio. Instalacion apt install git make gcc git clone https://github.com/robertdavidgraham/masscan cd masscan make make install Ejemplo masscan -p 80,8000-8100 IP/subred Escanea la IP/subred Escanea el puerto 80 y los puertos del rango 8000-8100, dentro de la IP/subred Para redirigir los resultados a un fichero, agregar \"--echo nombre_fichero.extension\" al final del comando","title":"MASSCAN"},{"location":"escaneo_redes/masscan/#masscan","text":"Masscan produce resultados similares a Nmap , el escaner de puertos mas famoso. Internamente opera de manera mas similar a scanrad , unicornscan y zmap . La principal diferencia es el hecho de ser mas veloz comparado con estos otros escaners. Ademas de ser mas flexible, permitiendo rangos de direcciones y rangos de puertos arbitrarios. No existen puertos por defecto a escanear, siempre se debe especificarlos. Y los hosts objetivos deben ser siempre direcciones IP o rangos simples, no nombres de dominio.","title":"MASSCAN"},{"location":"escaneo_redes/masscan/#instalacion","text":"apt install git make gcc git clone https://github.com/robertdavidgraham/masscan cd masscan make make install","title":"Instalacion"},{"location":"escaneo_redes/masscan/#ejemplo","text":"masscan -p 80,8000-8100 IP/subred Escanea la IP/subred Escanea el puerto 80 y los puertos del rango 8000-8100, dentro de la IP/subred Para redirigir los resultados a un fichero, agregar \"--echo nombre_fichero.extension\" al final del comando","title":"Ejemplo"},{"location":"escaneo_redes/sandmap/","text":"SANDMAP Sandmap is a tool supporting network and system reconnaissance using the massive Nmap engine. It provides a user-friendly interface, automates and speeds up scanning and allows you to easily use many advanced scanning techniques. Instalacion git clone --recursive https://github.com/trimstray/sandmap cd sandmap ./setup.sh install sandmap Ejemplo","title":"SANDMAP"},{"location":"escaneo_redes/sandmap/#sandmap","text":"Sandmap is a tool supporting network and system reconnaissance using the massive Nmap engine. It provides a user-friendly interface, automates and speeds up scanning and allows you to easily use many advanced scanning techniques.","title":"SANDMAP"},{"location":"escaneo_redes/sandmap/#instalacion","text":"git clone --recursive https://github.com/trimstray/sandmap cd sandmap ./setup.sh install sandmap","title":"Instalacion"},{"location":"escaneo_redes/sandmap/#ejemplo","text":"","title":"Ejemplo"},{"location":"escaneo_redes/scapy/","text":"SCAPY Scapy es una herramienta de manipulacion de paquetes para redes informaticas, escrita originalmente en Python. Puede falsificar o decodificar paquetes, enviarlos por cable, capturarlos y unir solicitudes y respuestas. Instalacion apt install python-setuptools apt install git git clone https://github.com/secdev/scapy.git cd scapy/ python setup.py install","title":"SCAPY"},{"location":"escaneo_redes/scapy/#scapy","text":"Scapy es una herramienta de manipulacion de paquetes para redes informaticas, escrita originalmente en Python. Puede falsificar o decodificar paquetes, enviarlos por cable, capturarlos y unir solicitudes y respuestas.","title":"SCAPY"},{"location":"escaneo_redes/scapy/#instalacion","text":"apt install python-setuptools apt install git git clone https://github.com/secdev/scapy.git cd scapy/ python setup.py install","title":"Instalacion"},{"location":"escaneo_redes/tcptrack/","text":"TCPTRACK TCPTrack displays the status of TCP connections that it sees on a given network interface. It monitors their state and displays information such as state, source/destination addresses and bandwidth usage in a sorted, updated list. The filter expression is a standard pcap filter expression which can be used to filter down the characteristics of TCP connections that TCPTrack will see. OPTIONS -d: Only track connections that were started after TCPTrack was started. -f: Enable fast average recalculation. TCPTrack will calculate the average speeds of connections by using a running average. TCPTrack will use more memory and CPU time, but averages will seem closer to real time and will be updated more than once per second and may be more accurate under heavy load. -h: Display help -i [interface]: Sniff packets from the specified network interface. -T [pcap file]: Read packets from the specified file instead of sniffing from the network. Useful for testing. -p: Do not put the interface being sniffed into promiscuous mode. -r [seconds]: Wait this many seconds before removing a closed connection from the display. Defaults to 2 seconds. -v: Display version INTERACTIVE COMMANDS p: Pause/unpause display. No new connections will be added to the display, and all currently displayed connections will remain in the display. q: Quit s: Cycle through the sorting options: unsorted, sorted by rate, sorted by total bytes. The options for pausing and toggling sorting are useful if you're watching a very busy network and want to look at the display without connections jumping around (due to sorting and new connections being added) and disappearing (due to being closed for a certain time). When paused, no new connections will be displayed. However, TCPTrack will still monitor and track all connections it sees as usual. This option affects the display only, not internals. When you unpause, the display will be updated with all current information that TCPTrack has been gathering all along. Instalacion apt install tcptrack Ejemplos TCPTrack requires only one parameter to run: the -i flag followed by an interface name that you want TCPTrack to monitor. tcptrack -i eth0 TCPTrack can also take a pcap filter expression as an argument. The format of this filter expression is the same as that of TCPDump and other libpcap-based sniffers. This example will only show connections from host 10.45.165.2. tcptrack -i eth0 src or dst 10.45.165.2 This example will only show web traffic (ie, traffic on port 80). tcptrack -i eth0 port 80 When picking up a connection that was already running before TCPTrack was started, there is no way TCPTrack can know for sure which end of the connection is the client (ie, which peer started the connection) and which is the server (ie, which peer was listening). TCPTrack makes a crude guess at which is which by looking at the port numbers; whichever end has the lower port number is considered the server side. This isn't always accurate of course, but future versions may have better heuristics to figure out which end is which. Currently the interface is not very flexible. Display timing settings (such as the refresh interval) can only be changed by editing the source code (defs.h in particular).","title":"TCPTRACK"},{"location":"escaneo_redes/tcptrack/#tcptrack","text":"TCPTrack displays the status of TCP connections that it sees on a given network interface. It monitors their state and displays information such as state, source/destination addresses and bandwidth usage in a sorted, updated list. The filter expression is a standard pcap filter expression which can be used to filter down the characteristics of TCP connections that TCPTrack will see. OPTIONS -d: Only track connections that were started after TCPTrack was started. -f: Enable fast average recalculation. TCPTrack will calculate the average speeds of connections by using a running average. TCPTrack will use more memory and CPU time, but averages will seem closer to real time and will be updated more than once per second and may be more accurate under heavy load. -h: Display help -i [interface]: Sniff packets from the specified network interface. -T [pcap file]: Read packets from the specified file instead of sniffing from the network. Useful for testing. -p: Do not put the interface being sniffed into promiscuous mode. -r [seconds]: Wait this many seconds before removing a closed connection from the display. Defaults to 2 seconds. -v: Display version INTERACTIVE COMMANDS p: Pause/unpause display. No new connections will be added to the display, and all currently displayed connections will remain in the display. q: Quit s: Cycle through the sorting options: unsorted, sorted by rate, sorted by total bytes. The options for pausing and toggling sorting are useful if you're watching a very busy network and want to look at the display without connections jumping around (due to sorting and new connections being added) and disappearing (due to being closed for a certain time). When paused, no new connections will be displayed. However, TCPTrack will still monitor and track all connections it sees as usual. This option affects the display only, not internals. When you unpause, the display will be updated with all current information that TCPTrack has been gathering all along.","title":"TCPTRACK"},{"location":"escaneo_redes/tcptrack/#instalacion","text":"apt install tcptrack","title":"Instalacion"},{"location":"escaneo_redes/tcptrack/#ejemplos","text":"TCPTrack requires only one parameter to run: the -i flag followed by an interface name that you want TCPTrack to monitor. tcptrack -i eth0 TCPTrack can also take a pcap filter expression as an argument. The format of this filter expression is the same as that of TCPDump and other libpcap-based sniffers. This example will only show connections from host 10.45.165.2. tcptrack -i eth0 src or dst 10.45.165.2 This example will only show web traffic (ie, traffic on port 80). tcptrack -i eth0 port 80 When picking up a connection that was already running before TCPTrack was started, there is no way TCPTrack can know for sure which end of the connection is the client (ie, which peer started the connection) and which is the server (ie, which peer was listening). TCPTrack makes a crude guess at which is which by looking at the port numbers; whichever end has the lower port number is considered the server side. This isn't always accurate of course, but future versions may have better heuristics to figure out which end is which. Currently the interface is not very flexible. Display timing settings (such as the refresh interval) can only be changed by editing the source code (defs.h in particular).","title":"Ejemplos"},{"location":"escaneo_redes/vault/","text":"VAULT Scan website for the following vulnerabilities XSS LFI RFI SQLi Scanner Port scanning : ACK, FIN, NULL, XMAS IP scanning : Ping Sweep, ARP SSL vulnerability scan OS scan Hash scanner : MD5, SHA1, SHA224, SHA256, SHA512 Others Information Gathering Clickjacking jQuery version checking Insecure cookie flags Testing HTTP methods Insecure headers Header/banner grabbing Finde Find comments in source code Find e-mails in source code Session fixation through cookie injection Brute force login through authorization headers URL Fuzzer WHOIS Lookup Google Dork Error handler checker Admin panel finder Open redirect vulnerability CMS Detection Detect Honeypots Detect DDoS attack Detect De-authentication attack Detect ARP spoof attack Crawling Crawl a website and collect all the links Crawl and scrape the website for images Attacks DDoS Attack ARP Spoofer DNS Spoofer De-authentication attack Network disassociation attack Ping of death MAC Flood attack Utilities Generate customized backdoor Data monitoring Keylogger SSH Tunelling Generate sitemap MAC address changer Trace route Instalacion git clone https://github.com/abhisharma404/vault.git cd vault/ apt install python3-pip pip3 install virtualenv virtualenv venv source venv/bin/activate pip3 install -r requirements.txt cd /vault/src","title":"VAULT"},{"location":"escaneo_redes/vault/#vault","text":"Scan website for the following vulnerabilities XSS LFI RFI SQLi Scanner Port scanning : ACK, FIN, NULL, XMAS IP scanning : Ping Sweep, ARP SSL vulnerability scan OS scan Hash scanner : MD5, SHA1, SHA224, SHA256, SHA512 Others Information Gathering Clickjacking jQuery version checking Insecure cookie flags Testing HTTP methods Insecure headers Header/banner grabbing Finde Find comments in source code Find e-mails in source code Session fixation through cookie injection Brute force login through authorization headers URL Fuzzer WHOIS Lookup Google Dork Error handler checker Admin panel finder Open redirect vulnerability CMS Detection Detect Honeypots Detect DDoS attack Detect De-authentication attack Detect ARP spoof attack Crawling Crawl a website and collect all the links Crawl and scrape the website for images Attacks DDoS Attack ARP Spoofer DNS Spoofer De-authentication attack Network disassociation attack Ping of death MAC Flood attack Utilities Generate customized backdoor Data monitoring Keylogger SSH Tunelling Generate sitemap MAC address changer Trace route","title":"VAULT"},{"location":"escaneo_redes/vault/#instalacion","text":"git clone https://github.com/abhisharma404/vault.git cd vault/ apt install python3-pip pip3 install virtualenv virtualenv venv source venv/bin/activate pip3 install -r requirements.txt cd /vault/src","title":"Instalacion"},{"location":"escaneo_redes/vnstat/","text":"VNSTAT Vnstat es un monitor de red que viene incluido, por defecto, en la mayoria de las distribuciones de Linux, pero en la distribucion de Debian no viene de forma predeterminada, por lo que tendremos que instalarla. Este programa nos permite obtener un control en tiempo real sobre el trafico enviado y recibido en un periodo de tiempo, elegido por el usuario. Tendremos la posibilidad de consultar una base de datos, mostrar horas, dias, meses, semanas, el top de los ultimos 10 dias, actualizar la base de datos, calcular el trafico y muchas mas opciones disponibles. Instalacion apt install vnstat Pruebas Si ejecutamos man vnstat podremos ver el resto de opciones de configuracion que tenemos disponibles con este programa, pudiendo exportar toda la informacion en formato XML e incluso JSON , ademas, tendremos la posibilidad de mostrar las estadisticas de una interfaz o de varias conjuntamente.","title":"VNSTAT"},{"location":"escaneo_redes/vnstat/#vnstat","text":"Vnstat es un monitor de red que viene incluido, por defecto, en la mayoria de las distribuciones de Linux, pero en la distribucion de Debian no viene de forma predeterminada, por lo que tendremos que instalarla. Este programa nos permite obtener un control en tiempo real sobre el trafico enviado y recibido en un periodo de tiempo, elegido por el usuario. Tendremos la posibilidad de consultar una base de datos, mostrar horas, dias, meses, semanas, el top de los ultimos 10 dias, actualizar la base de datos, calcular el trafico y muchas mas opciones disponibles.","title":"VNSTAT"},{"location":"escaneo_redes/vnstat/#instalacion","text":"apt install vnstat","title":"Instalacion"},{"location":"escaneo_redes/vnstat/#pruebas","text":"Si ejecutamos man vnstat podremos ver el resto de opciones de configuracion que tenemos disponibles con este programa, pudiendo exportar toda la informacion en formato XML e incluso JSON , ademas, tendremos la posibilidad de mostrar las estadisticas de una interfaz o de varias conjuntamente.","title":"Pruebas"},{"location":"jenkins/agentes_jenkins/","text":"Agentes/nodos Generar la clave SSH en el maestro (Contenedor Jenkins) Instalar Java en el nodo esclavo (Ubuntu) A\u00f1adir el repositorio: apt install software-properties-common apt-transport-https -y add-apt-repository ppa:openjdk-r/ppa -y Instalar Java OpenJDK apt install openjdk-8-jdk -y Crear un usuario en el contenedor del nodo (Ubuntu) A\u00f1adir nuevas credenciales en Jenkins desde el administrador: Tipo: Usuario SSH con clave privada Usuario: -- El que se haya creado en el paso anterior Introducir clave privada directamente (Copiar la clave conseguida a traves del paso 1 ) Habilitar puertos SSH Contenedor nodo (ubuntu) Contenedor Jenkins A\u00f1adir la clave ssh al nodo esclavo (Ubuntu) Agregar un nodo desde el administrador de Jenkins Nombre: Nombre del nodo Directorio raiz remoto: Carpeta /home del usuario que se haya creado en el paso 3 Metodo de ejecucion: Arrancar agentes remotos en maquinas Unix via SSH Nombre de maquina: Direccion IP del nodo esclavo (Ubuntu) Credenciales: Las credenciales que se hayan a\u00f1adido en el paso 4 Estrategia de verificacion: Manually trusted key Verification Strategy Verificar que se establece la conexion","title":"Agentes"},{"location":"jenkins/agentes_jenkins/#agentesnodos","text":"Generar la clave SSH en el maestro (Contenedor Jenkins) Instalar Java en el nodo esclavo (Ubuntu) A\u00f1adir el repositorio: apt install software-properties-common apt-transport-https -y add-apt-repository ppa:openjdk-r/ppa -y Instalar Java OpenJDK apt install openjdk-8-jdk -y Crear un usuario en el contenedor del nodo (Ubuntu) A\u00f1adir nuevas credenciales en Jenkins desde el administrador: Tipo: Usuario SSH con clave privada Usuario: -- El que se haya creado en el paso anterior Introducir clave privada directamente (Copiar la clave conseguida a traves del paso 1 ) Habilitar puertos SSH Contenedor nodo (ubuntu) Contenedor Jenkins A\u00f1adir la clave ssh al nodo esclavo (Ubuntu) Agregar un nodo desde el administrador de Jenkins Nombre: Nombre del nodo Directorio raiz remoto: Carpeta /home del usuario que se haya creado en el paso 3 Metodo de ejecucion: Arrancar agentes remotos en maquinas Unix via SSH Nombre de maquina: Direccion IP del nodo esclavo (Ubuntu) Credenciales: Las credenciales que se hayan a\u00f1adido en el paso 4 Estrategia de verificacion: Manually trusted key Verification Strategy Verificar que se establece la conexion","title":"Agentes/nodos"},{"location":"jenkins/info_jenkins/","text":"Jenkins Servidor de automatizacion de codigo abierto java. Facilita la automatizacion de desarrollo de software utilizando la integracion continua. Configuracion de puertos Cambiar el puerto desde el que se inicializa Jenkins para poder acceder desde el navegador. Ej.: Puerto 50000 Para acceder desde el navegador, escribir en la barra de busqueda: http://localhost:8080 Contrase\u00f1a Ubicacion de la contrase\u00f1a para acceder a Jenkins: /var/jenkins_home/secrets/master.key Comando CAT para visualizar la clave Puede que la ubicacion de la carpeta JENKINS_HOME se encuentre dentro de /var/lib","title":"Info"},{"location":"jenkins/info_jenkins/#jenkins","text":"Servidor de automatizacion de codigo abierto java. Facilita la automatizacion de desarrollo de software utilizando la integracion continua.","title":"Jenkins"},{"location":"jenkins/info_jenkins/#configuracion-de-puertos","text":"Cambiar el puerto desde el que se inicializa Jenkins para poder acceder desde el navegador. Ej.: Puerto 50000 Para acceder desde el navegador, escribir en la barra de busqueda: http://localhost:8080","title":"Configuracion de puertos"},{"location":"jenkins/info_jenkins/#contrasena","text":"Ubicacion de la contrase\u00f1a para acceder a Jenkins: /var/jenkins_home/secrets/master.key Comando CAT para visualizar la clave Puede que la ubicacion de la carpeta JENKINS_HOME se encuentre dentro de /var/lib","title":"Contrase\u00f1a"},{"location":"jenkins/pipelines_jenkins/","text":"Nueva tarea -- Pipeline Opciones a configurar: \"Esta opcion debe parametrizarse\": Se pueden a\u00f1adir distintos parametros dentro del Build Puede ser cadena, contrase\u00f1a, ejecucion, boolean . EJEMPLO: pipeline { agent any stages { stage('Build') { steps { echo \"Hola ${params.text}\" } } } }","title":"Pipelines/Jobs"},{"location":"kubernetes/comandos_kubernetes/","text":"Para consultar y administrar un cluster de Kubernetes, se usa la herramienta kubectl Ver la configuracion actual de kubectl kubectl config view Cambiar el contexto en uso kubectl Autorizar el agregar un nuevo usuario en kubeconf kubectl config set-credentials NAME [--client-certificate=ruta_certificado] [--client-key=ruta_keyfile] [--token=bearer_token] [--username=nombre_usuario] [--password=contrasena] Configurar la autenticacion basica para \"cluster-admin\" kubectl config set-credentials cluster-admin --username=[nombre_usuario] --password=[contrasena_usuario] Lanzar el dashboard kubectl proxy Visualizar el token para iniciar sesion en el dashboard kubectl -n kubernetes-dashboard describe secret Creacion de objetos Crear recursos definidos a traves de archivos .yaml , .yml y .json kubectl apply -f [archivo.extension] Para varios archivos kubectl apply -f [archivo1.extension] [archivo2.extension] Crear un recurso en todos los archivos del directorio kubectl apply -f ./dir Crear recursos desde una URL kubectl apply -f [URL] Crear un recurso desde el nombre de la imagen del repositorio kubectl create deployment [deployment-name] --image=[image-name] Ejemplo: kubectl create deployment nginx --image=nginx Borrar recursos kubectl delete -f ./archivo.extension Borrar un pod kubectl delete pod nombre_pod Interactuar con pods en ejecucion Ejecutar un pod kubectl run -i --tty nombre --image=[nombre_imagen] -- sh Verificar que un contenedor del pod se esta ejecutando, y ademas, visualizar los cambios en dicho pod kubectl get pod nombre_pod --watch Abrir una sesion interactiva dentro del contenedor en ejecucion kubectl exec -it nombre_contenedor -- /bin/bash Adjuntar un pod a un contenedor kubectl attach [nombre_pod] -i Reenvio de puertos para un pod kubectl port-forward [nombre_pod] [puerto_maquina_local]:[puerto_pod] Ver IP de un pod kubectl get -o template pod nombre_pod --template={{.status.podIP}}","title":"Comandos"},{"location":"kubernetes/comandos_kubernetes/#creacion-de-objetos","text":"Crear recursos definidos a traves de archivos .yaml , .yml y .json kubectl apply -f [archivo.extension] Para varios archivos kubectl apply -f [archivo1.extension] [archivo2.extension] Crear un recurso en todos los archivos del directorio kubectl apply -f ./dir Crear recursos desde una URL kubectl apply -f [URL] Crear un recurso desde el nombre de la imagen del repositorio kubectl create deployment [deployment-name] --image=[image-name] Ejemplo: kubectl create deployment nginx --image=nginx Borrar recursos kubectl delete -f ./archivo.extension Borrar un pod kubectl delete pod nombre_pod","title":"Creacion de objetos"},{"location":"kubernetes/comandos_kubernetes/#interactuar-con-pods-en-ejecucion","text":"Ejecutar un pod kubectl run -i --tty nombre --image=[nombre_imagen] -- sh Verificar que un contenedor del pod se esta ejecutando, y ademas, visualizar los cambios en dicho pod kubectl get pod nombre_pod --watch Abrir una sesion interactiva dentro del contenedor en ejecucion kubectl exec -it nombre_contenedor -- /bin/bash Adjuntar un pod a un contenedor kubectl attach [nombre_pod] -i Reenvio de puertos para un pod kubectl port-forward [nombre_pod] [puerto_maquina_local]:[puerto_pod] Ver IP de un pod kubectl get -o template pod nombre_pod --template={{.status.podIP}}","title":"Interactuar con pods en ejecucion"},{"location":"kubernetes/dashboard_kubernetes/","text":"Instalar el dashboard kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.5.1/aio/deploy/recommended.yaml Crear un objeto a partir de un fichero YAML kubectl create -f nombre_fichero.yaml Crear una cuenta de servicio para el dashboard kubectl create serviceaccount nombre_cuenta Enlazar cluster kubectl create clusterrolebinding nombre_cuenta --clusterrole=cluster-admin --serviceaccount=default:nombre_cuenta Listar los secretos kubectl get secrets Visualizar el secreto de un usuario kubectl describe secret nombre_secreto Copiar el secreto, iniciar el dashboard, ir al enlace para acceder y pegar el token para iniciar sesion con el usuario creado Comando para iniciar el dashboard kubectl proxy","title":"Dashboard"},{"location":"kubernetes/info_kubernetes/","text":"Es una administracion centralizada de contenedores y microservicios en la nube. Orquesta la infraestructura de computo, redes y almacenamiento para que las cargas de trabajo de los usuarios no tengan que hacerlo. Esto permite la portabilidad entre proveedores de infraestructura a traves de la simplicidad de las Plataformas como Servicio (PaaS) con la flexibilidad de la Infraestructura como Servicio (IaaS)","title":"Info"},{"location":"kubernetes/pruebas_kubernetes/","text":"Crear un job Comando para crear un job: kubectl create job nombre_job --image=nombre_imagen Ver el job creado en el dashboard: Crear un deployment kubectl apply -f /ruta_fichero.yaml Fichero YAML: apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment labels: app: nginx spec: replicas: 3 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:1.14.2 ports: - containerPort: 80 Visualizar los deployments para comprobar que se ha creado kubectl get deployments Ver el set de replicas creado por el deployment kubectl get rs Ver las etiquetas de cada replica kubectl get pods --show-labels Actualizar un deployment kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1 Alternativa kubectl edit deployment/nginx-deployment Cambiar en la seccion .spec.template.spec.containers[0].image la version nginx:1.14.2 por nginx:1.16.1 Ver que se ha creado otro set de replicas al actualizar el deployment kubectl get rs Ver los detalles del deployment kubectl describe deployments Volver un deployment a la version anterior Crear una actualizacion del deployment con errata kubectl set image deployment/nginx-deployment nginx=nginx:1.161 Ver los pods kubectl get pods Aparece uno con un error de imagen Ver el historial de versiones del deployment kubectl rollout history deployment/nginx-deployment Para ver mas info de cada revision: kubectl rollout history deployment/nginx-deployment --revision=numero_revision Volver a la version anterior kubectl rollout undo deployment/nginx-deployment 4.1. Volver a una version especifica kubectl rollout undo deployment/nginx-deployment --to-revision=numero_revision Escalar un deployment kubectl scale deployment/nginx-deployment --replicas=10 Comprobar que las replicas estan funcionando kubectl get deploy Actualizar a una imagen no existente kubectl set image deployment/nginx-deployment nginx=nginx:nombre_falso Ver el nuevo set de replicas kubectl get rs Escalado automatico de un deployment Crear un Dockerfile de php + apache FROM php:5-apache COPY index.php /var/www/html/index.php RUN chmod a+rx index.php Crear un deployment kubectl apply -f /ruta_fichero.yaml Fichero YAML apiVersion: apps/v1 kind: Deployment metadata: name: php-apache spec: selector: matchLabels: run: php-apache replicas: 1 template: metadata: labels: run: php-apache spec: containers: - name: php-apache image: k8s.gcr.io/hpa-example ports: - containerPort: 80 resources: limits: cpu: 500m requests: cpu: 200m --- apiVersion: v1 kind: Service metadata: name: php-apache labels: run: php-apache spec: ports: - port: 80 selector: run: php-apache Crear el escalado horizontal automatico kubectl autoscale deployment php-apache --cpu-percent=50 --min=1 --max=10 Agregar metrics-server kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.4.1/components.yaml Editar el fichero de metrics-server kubectl edit deployments.apps -n kube-system metrics-server spec: containers: - args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls=true - --kubelet-preferred-address-types=InternalIP Ver el estado del HPA (HorizontalPodAutoscaler) kubectl get hpa Aumentar la carga En otra ventana de PowerShell kubectl run -i --tty load-generator --rm --image=busybox --restart=Never -- /bin/sh -c \"while sleep 0.01; do wget -q -O- http://php-apache; done\" Ver los cambios en la carga de CPU (Actualiza cada 1 minuto) kubectl get hpa php-apache --watch","title":"Pruebas"},{"location":"kubernetes/pruebas_kubernetes/#crear-un-job","text":"Comando para crear un job: kubectl create job nombre_job --image=nombre_imagen Ver el job creado en el dashboard:","title":"Crear un job"},{"location":"kubernetes/pruebas_kubernetes/#crear-un-deployment","text":"kubectl apply -f /ruta_fichero.yaml Fichero YAML: apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment labels: app: nginx spec: replicas: 3 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:1.14.2 ports: - containerPort: 80 Visualizar los deployments para comprobar que se ha creado kubectl get deployments Ver el set de replicas creado por el deployment kubectl get rs Ver las etiquetas de cada replica kubectl get pods --show-labels","title":"Crear un deployment"},{"location":"kubernetes/pruebas_kubernetes/#actualizar-un-deployment","text":"kubectl set image deployment/nginx-deployment nginx=nginx:1.16.1 Alternativa kubectl edit deployment/nginx-deployment Cambiar en la seccion .spec.template.spec.containers[0].image la version nginx:1.14.2 por nginx:1.16.1 Ver que se ha creado otro set de replicas al actualizar el deployment kubectl get rs Ver los detalles del deployment kubectl describe deployments","title":"Actualizar un deployment"},{"location":"kubernetes/pruebas_kubernetes/#volver-un-deployment-a-la-version-anterior","text":"Crear una actualizacion del deployment con errata kubectl set image deployment/nginx-deployment nginx=nginx:1.161 Ver los pods kubectl get pods Aparece uno con un error de imagen Ver el historial de versiones del deployment kubectl rollout history deployment/nginx-deployment Para ver mas info de cada revision: kubectl rollout history deployment/nginx-deployment --revision=numero_revision Volver a la version anterior kubectl rollout undo deployment/nginx-deployment 4.1. Volver a una version especifica kubectl rollout undo deployment/nginx-deployment --to-revision=numero_revision","title":"Volver un deployment a la version anterior"},{"location":"kubernetes/pruebas_kubernetes/#escalar-un-deployment","text":"kubectl scale deployment/nginx-deployment --replicas=10 Comprobar que las replicas estan funcionando kubectl get deploy Actualizar a una imagen no existente kubectl set image deployment/nginx-deployment nginx=nginx:nombre_falso Ver el nuevo set de replicas kubectl get rs","title":"Escalar un deployment"},{"location":"kubernetes/pruebas_kubernetes/#escalado-automatico-de-un-deployment","text":"Crear un Dockerfile de php + apache FROM php:5-apache COPY index.php /var/www/html/index.php RUN chmod a+rx index.php Crear un deployment kubectl apply -f /ruta_fichero.yaml Fichero YAML apiVersion: apps/v1 kind: Deployment metadata: name: php-apache spec: selector: matchLabels: run: php-apache replicas: 1 template: metadata: labels: run: php-apache spec: containers: - name: php-apache image: k8s.gcr.io/hpa-example ports: - containerPort: 80 resources: limits: cpu: 500m requests: cpu: 200m --- apiVersion: v1 kind: Service metadata: name: php-apache labels: run: php-apache spec: ports: - port: 80 selector: run: php-apache Crear el escalado horizontal automatico kubectl autoscale deployment php-apache --cpu-percent=50 --min=1 --max=10 Agregar metrics-server kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.4.1/components.yaml Editar el fichero de metrics-server kubectl edit deployments.apps -n kube-system metrics-server spec: containers: - args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls=true - --kubelet-preferred-address-types=InternalIP Ver el estado del HPA (HorizontalPodAutoscaler) kubectl get hpa Aumentar la carga En otra ventana de PowerShell kubectl run -i --tty load-generator --rm --image=busybox --restart=Never -- /bin/sh -c \"while sleep 0.01; do wget -q -O- http://php-apache; done\" Ver los cambios en la carga de CPU (Actualiza cada 1 minuto) kubectl get hpa php-apache --watch","title":"Escalado automatico de un deployment"},{"location":"nwdiag/ejercicios_nwdiag/","text":"Ejercicio 1 @startuml nwdiag { network red1{ address = \"192.168.1.0/24\"; BBDD [address = \"192.168.1.10\"]; WEB [address = \"192.168.1.15, 192.168.1.16\"]; } network red2{ address = \"192.168.2.0/24\"; administracion [address = \"192.168.2.10\"]; taller [address = \"192.168.2.15\"]; WEB [address = \"192.168.2.3, 192.168.2.4\"]; BBDD1; BBDD2; //GRUPO CON NODOS DEFINIDOS group BD{ BBDD1; BBDD2; } } } @enduml Ejercicio 2 @startuml nwdiag { //GRUPO FUERA DE LAS DEFINICIONES DE RED group{ color = \"#FFAAAA\"; WEB; administracion; taller; } network red1{ address = \"192.168.1.0/24\"; BBDD [address = \"192.168.1.10\"]; WEB [address = \"192.168.1.15, 192.168.1.16\"]; } network red2{ address = \"192.168.2.0/24\"; administracion [address = \"192.168.2.10\"]; taller [address = \"192.168.2.15\"]; WEB [address = \"192.168.2.3, 192.168.2.4\"]; BBDD1; BBDD2; //GRUPO CON NODOS DEFINIDOS group BD{ BBDD1; BBDD2; } } } @enduml Ejercicio 3 @startuml nwdiag { group{ color = \"#FFAAAA\"; WEB; administracion; } group{ color = \"#AAAAFF\"; BBDD; taller; } //ANADIR COLOR Y FORMAS network red1{ address = \"192.168.1.0/24\"; color = \"blue\"; BBDD [address = \"192.168.1.10\", shape = database]; WEB [address = \"192.168.1.15, 192.168.1.16\"]; } network red2{ address = \"192.168.2.0/24\"; administracion [address = \"192.168.2.10\"]; taller [address = \"192.168.2.15\"]; WEB [address = \"192.168.2.3, 192.168.2.4\"]; BBDD1 [shape = database]; BBDD2 [shape = database]; group BD{ BBDD1; BBDD2; } } } @enduml Ejercicio 4 @startuml !include office/Servers/application_server nwdiag { group{ color = \"#FFAAAA\"; WEB; administracion; } group{ color = \"#AAAAFF\"; BBDD; taller; } //ANADIR SPRITES network red1{ address = \"192.168.1.0/24\"; color = \"blue\"; BBDD [address = \"192.168.1.10\", shape = database]; WEB [address = \"192.168.1.15, 192.168.1.16\", description = \" $application_server \\n WEB\"]; } network red2{ address = \"192.168.2.0/24\"; administracion [address = \"192.168.2.10\"]; taller [address = \"192.168.2.15\"]; WEB [address = \"192.168.2.3, 192.168.2.4\"]; BBDD1 [shape = database]; BBDD2 [shape = database]; group BD{ BBDD1; BBDD2; } } } @enduml Ejercicio 5 @startuml nwdiag { group{ color = \"#FFAAAA\"; WEB; administracion; } group{ color = \"#AAAAFF\"; BBDD; taller; } //ANADIR ICONOS network red1{ address = \"192.168.1.0/24\"; color = \"blue\"; BBDD [address = \"192.168.1.10\", shape = database]; WEB [address = \"192.168.1.15, 192.168.1.16\"]; } network red2{ address = \"192.168.2.0/24\"; administracion [address = \"192.168.2.10\"]; taller [address = \"192.168.2.15\", description = \" person*4 \\n taller\"]; WEB [address = \"192.168.2.3, 192.168.2.4\"]; BBDD1 [shape = database]; BBDD2 [shape = database]; group BD{ BBDD1; BBDD2; } } } @enduml Ejercicio 6 @startuml nwdiag { group{ color = \"#FFAAAA\"; WEB; administracion; } group{ color = \"#AAAAFF\"; BBDD; taller; } network red1{ address = \"192.168.1.0/24\"; color = \"blue\"; BBDD [address = \"192.168.1.10\", shape = database]; WEB [address = \"192.168.1.15, 192.168.1.16\"]; } network red2{ address = \"192.168.2.0/24\"; administracion [address = \"192.168.2.10\"]; taller [address = \"192.168.2.15\", description = \" person*4 \\n taller\"]; WEB [address = \"192.168.2.3, 192.168.2.4\"]; BBDD1 [shape = database]; BBDD2 [shape = database]; group BD{ BBDD1; BBDD2; } } //MISMOS NODOS EN MAS DE DOS REDES network red3{ address = \"192.168.3.0/24\"; color = \"green\"; BBDD; WEB; } } @enduml Ejercicio 7 @startuml nwdiag { //RED VERTICAL internet [shape = cloud]; internet -- router; network{ router; WEB; BBDD; } } @enduml Ejercicio 8 @startuml nwdiag { //RED VERTICAL SIN GRUPO internet [shape = cloud]; internet -- router; network red1{ router; WEB; } network red2{ WEB; BBDD; } } @enduml Ejercicio 9 @startuml nwdiag { //GRUPO PRIMERO internet [shape = cloud]; internet -- router; group{ color = \"tomato\"; WEB; BBDD; } network red1{ router; WEB; } network red2{ WEB; BBDD; } } @enduml Ejercicio 10 @startuml nwdiag { //GRUPO SEGUNDO internet [shape = cloud]; internet -- router; network red1{ router; WEB; } group{ color = \"greenyellow\"; WEB; BBDD; } network red2{ WEB; BBDD; } } @enduml Ejercicio 11 @startuml nwdiag { //GRUPO TERCERO internet [shape = cloud]; internet -- router; network red1{ router; WEB; } network red2{ WEB; BBDD; } group{ color = \"royalblue\"; WEB; BBDD; } } @enduml Ejercicio 12 //ANADIR TITULO, CABECERA, LEYENDA... @startuml title GRUPOS - 3 nwdiag { //GRUPO TERCERO internet [shape = cloud]; internet -- router; network red1{ router; WEB; } network red2{ WEB; BBDD; } group{ color = \"royalblue\"; WEB; BBDD; } } @enduml Ejercicio completo @startuml nwdiag{ internet [shape = cloud]; internet -- router; network firewall{ width = full; router; equipo01; } network dmz{ width = full; address = \"192.168.30.0/24\"; web [address = \"192.168.30.3\", description = \" cog*3 \\n web\", shape = \"node\"]; } network administracion{ width = full; address = \"192.168.10.0/24\"; equipo01; impresora [address = \"192.168.10.55\", description = \" print*3 \\n impresora\"]; bbdd [shape = database]; empleado01 [address = \"192.168.10.10\", description = \" person*3 \\n empleado01\"]; } network taller{ width = full; address = \"192.168.20.0/24\"; empleado02 [address = \"192.168.20.10\", description = \" person*3 \\n empleado02\"]; web; } group empleados{ color = \"red\"; empleado01; empleado02; } group{ color = \"green\"; web; bbdd; } } @enduml","title":"Ejercicios"},{"location":"nwdiag/ejercicios_nwdiag/#ejercicio-1","text":"@startuml nwdiag { network red1{ address = \"192.168.1.0/24\"; BBDD [address = \"192.168.1.10\"]; WEB [address = \"192.168.1.15, 192.168.1.16\"]; } network red2{ address = \"192.168.2.0/24\"; administracion [address = \"192.168.2.10\"]; taller [address = \"192.168.2.15\"]; WEB [address = \"192.168.2.3, 192.168.2.4\"]; BBDD1; BBDD2; //GRUPO CON NODOS DEFINIDOS group BD{ BBDD1; BBDD2; } } } @enduml","title":"Ejercicio 1"},{"location":"nwdiag/ejercicios_nwdiag/#ejercicio-2","text":"@startuml nwdiag { //GRUPO FUERA DE LAS DEFINICIONES DE RED group{ color = \"#FFAAAA\"; WEB; administracion; taller; } network red1{ address = \"192.168.1.0/24\"; BBDD [address = \"192.168.1.10\"]; WEB [address = \"192.168.1.15, 192.168.1.16\"]; } network red2{ address = \"192.168.2.0/24\"; administracion [address = \"192.168.2.10\"]; taller [address = \"192.168.2.15\"]; WEB [address = \"192.168.2.3, 192.168.2.4\"]; BBDD1; BBDD2; //GRUPO CON NODOS DEFINIDOS group BD{ BBDD1; BBDD2; } } } @enduml","title":"Ejercicio 2"},{"location":"nwdiag/ejercicios_nwdiag/#ejercicio-3","text":"@startuml nwdiag { group{ color = \"#FFAAAA\"; WEB; administracion; } group{ color = \"#AAAAFF\"; BBDD; taller; } //ANADIR COLOR Y FORMAS network red1{ address = \"192.168.1.0/24\"; color = \"blue\"; BBDD [address = \"192.168.1.10\", shape = database]; WEB [address = \"192.168.1.15, 192.168.1.16\"]; } network red2{ address = \"192.168.2.0/24\"; administracion [address = \"192.168.2.10\"]; taller [address = \"192.168.2.15\"]; WEB [address = \"192.168.2.3, 192.168.2.4\"]; BBDD1 [shape = database]; BBDD2 [shape = database]; group BD{ BBDD1; BBDD2; } } } @enduml","title":"Ejercicio 3"},{"location":"nwdiag/ejercicios_nwdiag/#ejercicio-4","text":"@startuml !include office/Servers/application_server nwdiag { group{ color = \"#FFAAAA\"; WEB; administracion; } group{ color = \"#AAAAFF\"; BBDD; taller; } //ANADIR SPRITES network red1{ address = \"192.168.1.0/24\"; color = \"blue\"; BBDD [address = \"192.168.1.10\", shape = database]; WEB [address = \"192.168.1.15, 192.168.1.16\", description = \" $application_server \\n WEB\"]; } network red2{ address = \"192.168.2.0/24\"; administracion [address = \"192.168.2.10\"]; taller [address = \"192.168.2.15\"]; WEB [address = \"192.168.2.3, 192.168.2.4\"]; BBDD1 [shape = database]; BBDD2 [shape = database]; group BD{ BBDD1; BBDD2; } } } @enduml","title":"Ejercicio 4"},{"location":"nwdiag/ejercicios_nwdiag/#ejercicio-5","text":"@startuml nwdiag { group{ color = \"#FFAAAA\"; WEB; administracion; } group{ color = \"#AAAAFF\"; BBDD; taller; } //ANADIR ICONOS network red1{ address = \"192.168.1.0/24\"; color = \"blue\"; BBDD [address = \"192.168.1.10\", shape = database]; WEB [address = \"192.168.1.15, 192.168.1.16\"]; } network red2{ address = \"192.168.2.0/24\"; administracion [address = \"192.168.2.10\"]; taller [address = \"192.168.2.15\", description = \" person*4 \\n taller\"]; WEB [address = \"192.168.2.3, 192.168.2.4\"]; BBDD1 [shape = database]; BBDD2 [shape = database]; group BD{ BBDD1; BBDD2; } } } @enduml","title":"Ejercicio 5"},{"location":"nwdiag/ejercicios_nwdiag/#ejercicio-6","text":"@startuml nwdiag { group{ color = \"#FFAAAA\"; WEB; administracion; } group{ color = \"#AAAAFF\"; BBDD; taller; } network red1{ address = \"192.168.1.0/24\"; color = \"blue\"; BBDD [address = \"192.168.1.10\", shape = database]; WEB [address = \"192.168.1.15, 192.168.1.16\"]; } network red2{ address = \"192.168.2.0/24\"; administracion [address = \"192.168.2.10\"]; taller [address = \"192.168.2.15\", description = \" person*4 \\n taller\"]; WEB [address = \"192.168.2.3, 192.168.2.4\"]; BBDD1 [shape = database]; BBDD2 [shape = database]; group BD{ BBDD1; BBDD2; } } //MISMOS NODOS EN MAS DE DOS REDES network red3{ address = \"192.168.3.0/24\"; color = \"green\"; BBDD; WEB; } } @enduml","title":"Ejercicio 6"},{"location":"nwdiag/ejercicios_nwdiag/#ejercicio-7","text":"@startuml nwdiag { //RED VERTICAL internet [shape = cloud]; internet -- router; network{ router; WEB; BBDD; } } @enduml","title":"Ejercicio 7"},{"location":"nwdiag/ejercicios_nwdiag/#ejercicio-8","text":"@startuml nwdiag { //RED VERTICAL SIN GRUPO internet [shape = cloud]; internet -- router; network red1{ router; WEB; } network red2{ WEB; BBDD; } } @enduml","title":"Ejercicio 8"},{"location":"nwdiag/ejercicios_nwdiag/#ejercicio-9","text":"@startuml nwdiag { //GRUPO PRIMERO internet [shape = cloud]; internet -- router; group{ color = \"tomato\"; WEB; BBDD; } network red1{ router; WEB; } network red2{ WEB; BBDD; } } @enduml","title":"Ejercicio 9"},{"location":"nwdiag/ejercicios_nwdiag/#ejercicio-10","text":"@startuml nwdiag { //GRUPO SEGUNDO internet [shape = cloud]; internet -- router; network red1{ router; WEB; } group{ color = \"greenyellow\"; WEB; BBDD; } network red2{ WEB; BBDD; } } @enduml","title":"Ejercicio 10"},{"location":"nwdiag/ejercicios_nwdiag/#ejercicio-11","text":"@startuml nwdiag { //GRUPO TERCERO internet [shape = cloud]; internet -- router; network red1{ router; WEB; } network red2{ WEB; BBDD; } group{ color = \"royalblue\"; WEB; BBDD; } } @enduml","title":"Ejercicio 11"},{"location":"nwdiag/ejercicios_nwdiag/#ejercicio-12","text":"//ANADIR TITULO, CABECERA, LEYENDA... @startuml title GRUPOS - 3 nwdiag { //GRUPO TERCERO internet [shape = cloud]; internet -- router; network red1{ router; WEB; } network red2{ WEB; BBDD; } group{ color = \"royalblue\"; WEB; BBDD; } } @enduml","title":"Ejercicio 12"},{"location":"nwdiag/ejercicios_nwdiag/#ejercicio-completo","text":"@startuml nwdiag{ internet [shape = cloud]; internet -- router; network firewall{ width = full; router; equipo01; } network dmz{ width = full; address = \"192.168.30.0/24\"; web [address = \"192.168.30.3\", description = \" cog*3 \\n web\", shape = \"node\"]; } network administracion{ width = full; address = \"192.168.10.0/24\"; equipo01; impresora [address = \"192.168.10.55\", description = \" print*3 \\n impresora\"]; bbdd [shape = database]; empleado01 [address = \"192.168.10.10\", description = \" person*3 \\n empleado01\"]; } network taller{ width = full; address = \"192.168.20.0/24\"; empleado02 [address = \"192.168.20.10\", description = \" person*3 \\n empleado02\"]; web; } group empleados{ color = \"red\"; empleado01; empleado02; } group{ color = \"green\"; web; bbdd; } } @enduml","title":"Ejercicio completo"},{"location":"nwdiag/info_nwdiag/","text":"Que es? nwdiag permite dibujar diagramas de red. Ejemplos basicos 1. Diagrama simple Definir una red @startuml nwdiag { network dmz { address = \"210.x.x.x/24\" } } @enduml Definir elementos/servidores en una red @startuml nwdiag { network dmz { address = \"210.x.x.x/24\" web01 [address = \"210.x.x.1\"]; web02 [address = \"210.x.x.2\"]; } } @enduml Ejemplo completo @startuml nwdiag { network dmz { address = \"210.x.x.x/24\" web01 [address = \"210.x.x.1\"]; web02 [address = \"210.x.x.2\"]; } network internal { address = \"172.x.x.x/24\"; web01 [address = \"172.x.x.1\"]; web02 [address = \"172.x.x.2\"]; db01; db02; } } @enduml 2. Definir multiples direcciones @startuml nwdiag { network dmz { address = \"210.x.x.x/24\" // Definir varias direcciones (usando coma) web01 [address = \"210.x.x.1, 210.x.x.20\"]; web02 [address = \"210.x.x.2\"]; } network internal { address = \"172.x.x.x/24\"; web01 [address = \"172.x.x.1\"]; web02 [address = \"172.x.x.2\"]; db01; db02; } } @enduml 3. Agrupar nodos Definir un grupo dentro de las definiciones de red @startuml nwdiag { network Sample_front { address = \"192.168.10.0/24\"; // definir grupo group web { web01 [address = \".1\"]; web02 [address = \".2\"]; } } network Sample_back { address = \"192.168.20.0/24\"; web01 [address = \".1\"]; web02 [address = \".2\"]; db01 [address = \".101\"]; db02 [address = \".102\"]; // definir una red usando nodos previamente definidos group db { db01; db02; } } } @enduml Definir un grupo fuera de las definiciones de red @startuml nwdiag { // definir el grupo fuera de las definiones de red group { color = \"#FFAAAA\"; web01; web02; db01; } network dmz { web01; web02; } network internal { web01; web02; db01; db02; } } @enduml Definir varios grupos en la misma red 3.1. Ejemplo con 2 grupos @startuml nwdiag { group { color = \"#FFaaaa\"; web01; db01; } group { color = \"#aaaaFF\"; web02; db02; } network dmz { address = \"210.x.x.x/24\" web01 [address = \"210.x.x.1\"]; web02 [address = \"210.x.x.2\"]; } network internal { address = \"172.x.x.x/24\"; web01 [address = \"172.x.x.1\"]; web02 [address = \"172.x.x.2\"]; db01 ; db02 ; } } @enduml 3.2. Ejemplo con 3 grupos @startuml nwdiag { group { color = \"#FFaaaa\"; web01; db01; } group { color = \"#aaFFaa\"; web02; db02; } group { color = \"#aaaaFF\"; web03; db03; } network dmz { web01; web02; web03; } network internal { web01; db01 ; web02; db02 ; web03; db03; } } @enduml 4. Sintaxis extendida (Para redes/grupos) Redes - Se pueden agregar varias direcciones, color, descripcion, forma @startuml nwdiag { network Sample_front { address = \"192.168.10.0/24\" color = \"red\" // definir grupo group web { web01 [address = \".1, .2\", shape = \"node\"] web02 [address = \".2, .3\"] } } network Sample_back { address = \"192.168.20.0/24\" color = \"palegreen\" web01 [address = \".1\"] web02 [address = \".2\"] db01 [address = \".101\", shape = database ] db02 [address = \".102\"] // definir la red usando nodos definidos group db { db01; db02; } } } @enduml Grupo - Se puede agregar/cambiar color y descripcion @startuml nwdiag { group { color = \"#CCFFCC\"; description = \"Descripcion del grupo\"; web01; web02; db01; } network dmz { web01; web02; } network internal { web01; web02; db01 [address = \".101\", shape = database]; } } @enduml 5. Sprites Se pueden usar todos los sprites de la Libreria Estandar o cualquier otra libreria Usa \" $sprite \" para usar un sprite y \\n para una nueva linea @startuml !include office/Servers/application_server !include office/Servers/database_server nwdiag { network dmz { address = \"210.x.x.x/24\" // Establecer varias direcciones (usando coma) web01 [address = \"210.x.x.1, 210.x.x.20\", description = \" $application_server \\n web01\"] web02 [address = \"210.x.x.2\", description = \" $application_server \\n web02\"]; } network internal { address = \"172.x.x.x/24\"; web01 [address = \"172.x.x.1\"]; web02 [address = \"172.x.x.2\"]; db01 [address = \"172.x.x.100\", description = \" $database_server \\n db01\"]; db02 [address = \"172.x.x.101\", description = \" $database_server \\n db02\"]; } } @enduml 6. Iconos Tambien se pueden usar iconos de OpenIconic en la descripcion de un red o grupo. Usa \" $icon \" para crear un icono, \" $icon * n \" para multiplicar el tamano por el factor \"n\" y \" \\n \" para una nueva linea. @startuml nwdiag { group nightly { color = \"#FFAAAA\"; description = \" clock Restarted nightly clock \"; web02; db01; } network dmz { address = \"210.x.x.x/24\" user [description = \" person*4.5 \\n user1\"]; web01 [address = \"210.x.x.1, 210.x.x.20\", description = \" cog*4 \\nweb01\"] web02 [address = \"210.x.x.2\", description = \" cog*4 \\nweb02\"]; } network internal { address = \"172.x.x.x/24\"; web01 [address = \"172.x.x.1\"]; web02 [address = \"172.x.x.2\"]; db01 [address = \"172.x.x.100\", description = \" spreadsheet*4 \\n db01\"]; db02 [address = \"172.x.x.101\", description = \" spreadsheet*4 \\n db02\"]; ptr [address = \"172.x.x.110\", description = \" print*4 \\n ptr01\"]; } } @enduml 7. Mismos nodos en mas de dos redes @startuml nwdiag { // definir el grupo fuera de la definicion de la red group { color = \"#7777FF\"; web01; web02; db01; } network dmz { color = \"pink\" web01; web02; } network internal { web01; web02; db01 [shape = database ]; } network internal2 { color = \"LightBlue\"; web01; web02; db01; } } @enduml 8. Redes pares (Peer Networks) Las redes pares son simples conexiones entre dos nodos, en las que no se usa la red \"busbar\" horizontal. @startuml nwdiag { inet [shape = cloud]; inet -- router; network { router; web01; web02; } } @enduml 9. Redes pares y grupos Sin grupo @startuml nwdiag { internet [ shape = cloud]; internet -- router; network proxy { router; app; } network default { app; db; } } @enduml Con un grupo primero @startuml nwdiag { internet [ shape = cloud]; internet -- router; group { color = \"pink\"; app; db; } network proxy { router; app; } network default { app; db; } } @enduml Con un grupo segundo @startuml nwdiag { internet [ shape = cloud]; internet -- router; network proxy { router; app; } group { color = \"pink\"; app; db; } network default { app; db; } } @enduml Con un grupo tercero @startuml nwdiag { internet [ shape = cloud]; internet -- router; network proxy { router; app; } network default { app; db; } group { color = \"pink\"; app; db; } } @enduml 10. Anadir titulo, texto, cabecera, pie o leyenda en el diagrama @startuml header CABECERA footer PIE DE PAGINA title TITULO nwdiag { network inet { web01 [shape = cloud] } } legend Leyenda end legend caption Esto es el texto @enduml 11. Otras redes internas Sin direccion o tipo @startuml nwdiag { network LAN1 { a [address = \"a1\"]; } network LAN2 { a [address = \"a2\"]; switch; } switch -- equip; equip -- printer; } @enduml Con direccion o tipo @startuml nwdiag { network LAN1 { a [address = \"a1\"]; } network LAN2 { a [address = \"a2\"]; switch [address = \"s2\"]; } switch -- equip; equip [address = \"e3\"]; equip -- printer; printer [address = \"USB\"]; } @enduml 12. Apendice: Todas las formas en nwdiag @startuml nwdiag { network Network1 { Actor [shape = actor] Agent [shape = agent] Artifact [shape = artifact] Boundary [shape = boundary] } network Network2 { Card [shape = card] Cloud [shape = cloud] Collections [shape = collections] Component [shape = component] } network Network3{ Control [shape = control] Database [shape = database] Entity [shape = entity] File [shape = file] } network Network4{ Folder [shape = folder] Frame [shape = frame] Hexagon [shape = hexagon] Interface [shape = interface] } network Network5{ Label [shape = label] Node [shape = node] Package [shape = package] Person [shape = person] } network Network6{ Queue [shape = queue] Stack [shape = stack] Rectangle [shape = rectangle] Storage [shape = storage] Usecase [shape = usecase] } } @enduml","title":"Info"},{"location":"nwdiag/info_nwdiag/#que-es","text":"nwdiag permite dibujar diagramas de red.","title":"Que es?"},{"location":"nwdiag/info_nwdiag/#ejemplos-basicos","text":"","title":"Ejemplos basicos"},{"location":"nwdiag/info_nwdiag/#1-diagrama-simple","text":"Definir una red @startuml nwdiag { network dmz { address = \"210.x.x.x/24\" } } @enduml Definir elementos/servidores en una red @startuml nwdiag { network dmz { address = \"210.x.x.x/24\" web01 [address = \"210.x.x.1\"]; web02 [address = \"210.x.x.2\"]; } } @enduml Ejemplo completo @startuml nwdiag { network dmz { address = \"210.x.x.x/24\" web01 [address = \"210.x.x.1\"]; web02 [address = \"210.x.x.2\"]; } network internal { address = \"172.x.x.x/24\"; web01 [address = \"172.x.x.1\"]; web02 [address = \"172.x.x.2\"]; db01; db02; } } @enduml","title":"1. Diagrama simple"},{"location":"nwdiag/info_nwdiag/#2-definir-multiples-direcciones","text":"@startuml nwdiag { network dmz { address = \"210.x.x.x/24\" // Definir varias direcciones (usando coma) web01 [address = \"210.x.x.1, 210.x.x.20\"]; web02 [address = \"210.x.x.2\"]; } network internal { address = \"172.x.x.x/24\"; web01 [address = \"172.x.x.1\"]; web02 [address = \"172.x.x.2\"]; db01; db02; } } @enduml","title":"2. Definir multiples direcciones"},{"location":"nwdiag/info_nwdiag/#3-agrupar-nodos","text":"Definir un grupo dentro de las definiciones de red @startuml nwdiag { network Sample_front { address = \"192.168.10.0/24\"; // definir grupo group web { web01 [address = \".1\"]; web02 [address = \".2\"]; } } network Sample_back { address = \"192.168.20.0/24\"; web01 [address = \".1\"]; web02 [address = \".2\"]; db01 [address = \".101\"]; db02 [address = \".102\"]; // definir una red usando nodos previamente definidos group db { db01; db02; } } } @enduml Definir un grupo fuera de las definiciones de red @startuml nwdiag { // definir el grupo fuera de las definiones de red group { color = \"#FFAAAA\"; web01; web02; db01; } network dmz { web01; web02; } network internal { web01; web02; db01; db02; } } @enduml Definir varios grupos en la misma red 3.1. Ejemplo con 2 grupos @startuml nwdiag { group { color = \"#FFaaaa\"; web01; db01; } group { color = \"#aaaaFF\"; web02; db02; } network dmz { address = \"210.x.x.x/24\" web01 [address = \"210.x.x.1\"]; web02 [address = \"210.x.x.2\"]; } network internal { address = \"172.x.x.x/24\"; web01 [address = \"172.x.x.1\"]; web02 [address = \"172.x.x.2\"]; db01 ; db02 ; } } @enduml 3.2. Ejemplo con 3 grupos @startuml nwdiag { group { color = \"#FFaaaa\"; web01; db01; } group { color = \"#aaFFaa\"; web02; db02; } group { color = \"#aaaaFF\"; web03; db03; } network dmz { web01; web02; web03; } network internal { web01; db01 ; web02; db02 ; web03; db03; } } @enduml","title":"3. Agrupar nodos"},{"location":"nwdiag/info_nwdiag/#4-sintaxis-extendida-para-redesgrupos","text":"Redes - Se pueden agregar varias direcciones, color, descripcion, forma @startuml nwdiag { network Sample_front { address = \"192.168.10.0/24\" color = \"red\" // definir grupo group web { web01 [address = \".1, .2\", shape = \"node\"] web02 [address = \".2, .3\"] } } network Sample_back { address = \"192.168.20.0/24\" color = \"palegreen\" web01 [address = \".1\"] web02 [address = \".2\"] db01 [address = \".101\", shape = database ] db02 [address = \".102\"] // definir la red usando nodos definidos group db { db01; db02; } } } @enduml Grupo - Se puede agregar/cambiar color y descripcion @startuml nwdiag { group { color = \"#CCFFCC\"; description = \"Descripcion del grupo\"; web01; web02; db01; } network dmz { web01; web02; } network internal { web01; web02; db01 [address = \".101\", shape = database]; } } @enduml","title":"4. Sintaxis extendida (Para redes/grupos)"},{"location":"nwdiag/info_nwdiag/#5-sprites","text":"Se pueden usar todos los sprites de la Libreria Estandar o cualquier otra libreria Usa \" $sprite \" para usar un sprite y \\n para una nueva linea @startuml !include office/Servers/application_server !include office/Servers/database_server nwdiag { network dmz { address = \"210.x.x.x/24\" // Establecer varias direcciones (usando coma) web01 [address = \"210.x.x.1, 210.x.x.20\", description = \" $application_server \\n web01\"] web02 [address = \"210.x.x.2\", description = \" $application_server \\n web02\"]; } network internal { address = \"172.x.x.x/24\"; web01 [address = \"172.x.x.1\"]; web02 [address = \"172.x.x.2\"]; db01 [address = \"172.x.x.100\", description = \" $database_server \\n db01\"]; db02 [address = \"172.x.x.101\", description = \" $database_server \\n db02\"]; } } @enduml","title":"5. Sprites"},{"location":"nwdiag/info_nwdiag/#6-iconos","text":"Tambien se pueden usar iconos de OpenIconic en la descripcion de un red o grupo. Usa \" $icon \" para crear un icono, \" $icon * n \" para multiplicar el tamano por el factor \"n\" y \" \\n \" para una nueva linea. @startuml nwdiag { group nightly { color = \"#FFAAAA\"; description = \" clock Restarted nightly clock \"; web02; db01; } network dmz { address = \"210.x.x.x/24\" user [description = \" person*4.5 \\n user1\"]; web01 [address = \"210.x.x.1, 210.x.x.20\", description = \" cog*4 \\nweb01\"] web02 [address = \"210.x.x.2\", description = \" cog*4 \\nweb02\"]; } network internal { address = \"172.x.x.x/24\"; web01 [address = \"172.x.x.1\"]; web02 [address = \"172.x.x.2\"]; db01 [address = \"172.x.x.100\", description = \" spreadsheet*4 \\n db01\"]; db02 [address = \"172.x.x.101\", description = \" spreadsheet*4 \\n db02\"]; ptr [address = \"172.x.x.110\", description = \" print*4 \\n ptr01\"]; } } @enduml","title":"6. Iconos"},{"location":"nwdiag/info_nwdiag/#7-mismos-nodos-en-mas-de-dos-redes","text":"@startuml nwdiag { // definir el grupo fuera de la definicion de la red group { color = \"#7777FF\"; web01; web02; db01; } network dmz { color = \"pink\" web01; web02; } network internal { web01; web02; db01 [shape = database ]; } network internal2 { color = \"LightBlue\"; web01; web02; db01; } } @enduml","title":"7. Mismos nodos en mas de dos redes"},{"location":"nwdiag/info_nwdiag/#8-redes-pares-peer-networks","text":"Las redes pares son simples conexiones entre dos nodos, en las que no se usa la red \"busbar\" horizontal. @startuml nwdiag { inet [shape = cloud]; inet -- router; network { router; web01; web02; } } @enduml","title":"8. Redes pares (Peer Networks)"},{"location":"nwdiag/info_nwdiag/#9-redes-pares-y-grupos","text":"Sin grupo @startuml nwdiag { internet [ shape = cloud]; internet -- router; network proxy { router; app; } network default { app; db; } } @enduml Con un grupo primero @startuml nwdiag { internet [ shape = cloud]; internet -- router; group { color = \"pink\"; app; db; } network proxy { router; app; } network default { app; db; } } @enduml Con un grupo segundo @startuml nwdiag { internet [ shape = cloud]; internet -- router; network proxy { router; app; } group { color = \"pink\"; app; db; } network default { app; db; } } @enduml Con un grupo tercero @startuml nwdiag { internet [ shape = cloud]; internet -- router; network proxy { router; app; } network default { app; db; } group { color = \"pink\"; app; db; } } @enduml","title":"9. Redes pares y grupos"},{"location":"nwdiag/info_nwdiag/#10-anadir-titulo-texto-cabecera-pie-o-leyenda-en-el-diagrama","text":"@startuml header CABECERA footer PIE DE PAGINA title TITULO nwdiag { network inet { web01 [shape = cloud] } } legend Leyenda end legend caption Esto es el texto @enduml","title":"10. Anadir titulo, texto, cabecera, pie o leyenda en el diagrama"},{"location":"nwdiag/info_nwdiag/#11-otras-redes-internas","text":"Sin direccion o tipo @startuml nwdiag { network LAN1 { a [address = \"a1\"]; } network LAN2 { a [address = \"a2\"]; switch; } switch -- equip; equip -- printer; } @enduml Con direccion o tipo @startuml nwdiag { network LAN1 { a [address = \"a1\"]; } network LAN2 { a [address = \"a2\"]; switch [address = \"s2\"]; } switch -- equip; equip [address = \"e3\"]; equip -- printer; printer [address = \"USB\"]; } @enduml","title":"11. Otras redes internas"},{"location":"nwdiag/info_nwdiag/#12-apendice-todas-las-formas-en-nwdiag","text":"@startuml nwdiag { network Network1 { Actor [shape = actor] Agent [shape = agent] Artifact [shape = artifact] Boundary [shape = boundary] } network Network2 { Card [shape = card] Cloud [shape = cloud] Collections [shape = collections] Component [shape = component] } network Network3{ Control [shape = control] Database [shape = database] Entity [shape = entity] File [shape = file] } network Network4{ Folder [shape = folder] Frame [shape = frame] Hexagon [shape = hexagon] Interface [shape = interface] } network Network5{ Label [shape = label] Node [shape = node] Package [shape = package] Person [shape = person] } network Network6{ Queue [shape = queue] Stack [shape = stack] Rectangle [shape = rectangle] Storage [shape = storage] Usecase [shape = usecase] } } @enduml","title":"12. Apendice: Todas las formas en nwdiag"}]}